@model PagedList.IPagedList<SoftServe.Demo2.Models.EmployeesModel.Employee>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}
<h2>Human Resource Management System</h2>
<button onclick="location='@Url.Action("Create")'" style="margin-bottom:10px; margin-top: 10px">Create New</button>
@*Add searching buttons*@
<span style="float:right; margin-bottom:10px; margin-top: 10px">
    @using (Html.BeginForm())
    {
        @Html.TextBox("search")
        <input type="submit" value="Search" />
    }
</span>
<table class="table">
    @*Options for sorting by different criteria*@
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSort })
        </th>
        <th>
            @Html.ActionLink("Position", "Index", new { sortOrder = ViewBag.PositionSort })
        </th>
        <th>
            @Html.ActionLink("Project name", "Index", new { sortOrder = ViewBag.ProjectSort })
        </th>
        <th>
            @Html.ActionLink("Team name", "Index", new { sortOrder = ViewBag.TeamSort })
        </th>
        <th>
            @Html.ActionLink("Workplace", "Index", new { sortOrder = ViewBag.WorkplaceSort })
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Position)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.ProjectName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Team.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Workplace)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }
</table>

@*Add paging*@
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    <div>
        @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </div>